{"version":3,"file":"/home/grant/workspace/mocha/src/calculator.ts","sources":["/home/grant/workspace/mocha/src/calculator.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,yDAAyD;AACzD,kDAA0B;AAE1B,MAAa,UAAU;IACnB,GAAG,CAAC,CAAS,EAAE,CAAS;QACpB,OAAO,CAAC,GAAG,CAAC,CAAC;IACjB,CAAC;IAED,QAAQ,CAAC,CAAS,EAAE,CAAS;QACzB,OAAO,CAAC,GAAG,CAAC,CAAC;IACjB,CAAC;IAED,QAAQ,CAAC,CAAS,EAAE,CAAS;QACzB,OAAO,CAAC,GAAG,CAAC,CAAC;IACjB,CAAC;IAED,MAAM,CAAC,CAAS,EAAE,CAAS;QACvB,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;YACV,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;QAC1C,CAAC;QACD,OAAO,CAAC,GAAG,CAAC,CAAC;IACjB,CAAC;IAED,kBAAkB;IAClB,QAAQ;QACJ,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAA;IAC7C,CAAC;IAED,SAAS,CAAC,CAAS,EAAE,CAAS;QAC1B,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;QAC/B,MAAM,CAAC,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC1B,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACrB,CAAC;IAED,UAAU,CAAC,OAAc;QACrB,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACzB,CAAC;IAED,eAAe;IACf,YAAY;QACR,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACnC,UAAU,CAAC,GAAE,EAAE,GAAE,OAAO,CAAC,CAAC,CAAC,CAAA,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;QACzC,CAAC,CAAC,CAAA;IACN,CAAC;IAED,WAAW;IACL,OAAO;;YACT,OAAO,MAAM,eAAK,CAAC,GAAG,CAAC,8CAA8C,CAAC,CAAC;QAC3E,CAAC;KAAA;IAEK,QAAQ,CAAC,WAAkB;;YAC7B,OAAO,MAAM,eAAK,CAAC,IAAI,CAAC,4CAA4C,EAAE,WAAW,CAAC,CAAC;QACvF,CAAC;KAAA;CACJ;AAlDD,gCAkDC","sourcesContent":["// export default to remove curly braces during importing\nimport axios from 'axios';\n\nexport class Calculator {\n    add(a: number, b: number):number {\n        return a + b;\n    }\n\n    subtract(a: number, b: number):number {\n        return a - b;\n    }\n\n    multiply(a: number, b: number):number {\n        return a * b;\n    }\n\n    divide(a: number, b: number):number {\n        if (b === 0) {\n            throw new Error('Cannot Divide by 0');\n        }\n        return a / b;\n    }\n\n    // spy, stub, mock\n    randomNo():number {\n        return Math.floor(Math.random() * 10 + 1)\n    }\n\n    addRandom(a: number, b: number):number {\n        this.logMessage('logging add');\n        const c = this.randomNo();\n        return a + b + c;\n    }\n\n    logMessage(message:string) {\n        console.log(message);\n    }\n\n    // asyncPromise\n    asyncPromise() {\n        return new Promise((resolve, reject) => {\n            setTimeout(()=>{ resolve(4) }, 1000);\n        })\n    }\n\n    // REST API\n    async getUser() {\n        return await axios.get('https://jsonplaceholder.typicode.com/users/1');\n    }\n\n    async saveUser(userPayload:Object) {\n        return await axios.post('https://jsonplaceholder.typicode.com/users', userPayload);\n    }\n}"]}